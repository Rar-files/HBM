#BetterWithPatches Configuration.
#Last generated at: Tue Jun 11 22:15:52 CEST 2024

#genericFixes: Crash safeguards and minor tweaks. The more intrusive patches should have their own entries. [Side: BOTH | Default: true]
genericFixes=true
#lazyGeneratorDelay: The time (in ticks) it takes for a generator to recheck its validity and speed while active, but not strained. Depends on "genericFixes". [Side: SERVER | Default: 100]
lazyGeneratorDelay=100
#lazyCauldronDelay: The time (in ticks) it takes for a cauldron to lazily check whether it's over a heat source (only when active). Depends on "genericFixes". [Side: SERVER | Default: 100]
lazyCauldronDelay=100
#patchKiln: Various additions and fixes to the Kiln. Required for recipe manipulation. [Side: BOTH | Default: true]
patchKiln=true
#canKilnSmeltOres: Enables attempted theft of smelting recipes for Ores inside the Kiln.
canKilnSmeltOres=true
#patchTurntable: Various additions and fixes to the Turntable. Required for recipe manipulation. [Side: BOTH | Default: true]
patchTurntable=true
#patchHCWood: Replaces most of the Hardcore Wood feature set. Bark is now dynamic and can drop from any block in logWood. [Side: BOTH | Default: true]
patchHCWood=true
#hcWoodPlankLoss: How many planks are lost when you break logs inappropriately. If set too low (4 in vanilla), planks won't drop at all. Setting to 0 disables plank loss. Depends on "patchHCWood". [Side: SERVER | Default: 1]
hcWoodPlankLoss=1
#HCTreestumps: Makes Log Blocks take much longer to break if they're standing on anything that resembles soil. [Side: BOTH | Default: true]
HCTreestumps=true
#patchSaw: Various additions and fixes to the Saw. Unhardcodes most of the behaviours, allows for defining custom drops for Blocks and Entities. Depends on "patchHCWood". [Side: BOTH | Default: true]
patchSaw=true
#choppingBlockHeadDropChance: You can use this to manipulate the chance for vanilla heads to drop when a Mob gets Sawed to death on a Chopping Block. This ONLY affects default head drops defined by BetterWithPatches. [Side: SERVER | Default: 33]
choppingBlockHeadDropChance=33
#forceChopPlayerHeads: Enables chopping off other Players' heads using the Saw regardless of whether Tinkers Construct is present and its "Players drop heads on death" config option is enabled. [Side: Server | Default: false]
forceChopPlayerHeads=false
#dirtyStokedFlameFix: Extends the lifespan of Stoked Flames to hide the weird gaps in the current update system. [Side: SERVER | Default: true]
dirtyStokedFlameFix=true
#patchCookingPot: Various additions and fixes to the Cauldron and Crucible. Patches the GUI to have an indicator of being Stoked. [Side: BOTH | Default: true]
patchCookingPot=true
#patchHCBuckets: Makes Hardcore Buckets actually work in a modded environment. Forces HCBuckets to be on if it's disabled in the BWM Config. [Side: SERVER | Default: true]
patchHCBuckets=true
#patchCreativeTabs: Moves every BWM item into a separate creative tab added by BWP. If false, only things added by BWP use it. [Side: CLIENT | Default: true]
patchCreativeTabs=true
#enableNEICompat: Adds recipe views for NotEnoughItems. [Side: BOTH | Default: true]
enableNEICompat=true
#patchSignPicForLwjglify: LWJGL3ify seems to cause the SignPicture upload overlay to constantly trigger during normal play, this patch simply removes the check that causes it. [Side: CLIENT | Default: true]
patchSignPicForLwjglify=true
#vanillaRecipesInAnvil: If true, the Soulforged Steel Anvil will attempt to match vanilla recipes in its grid. [Side: BOTH | Default: true]
vanillaRecipesInAnvil=true
#chainmailArmorRecipe: Replaces the broken vanilla recipes for Chainmail Armor with functional ones.
chainmailArmorRecipe=true
#furnaceHCGunpowder: Makes Gunpowder explode when put inside a lit furnace. [Side: SERVER | Default: true]
furnaceHCGunpowder=true
#HCFurnace: Allows specifying cook times for items and changes vanilla fuel values. [Side: SERVER | Default: false]
HCFurnace=false
#hcFurnaceDefaultCookTime: Default number of ticks it takes to cook an item. [Side: SERVER | Default: 200]
hcFurnaceDefaultCookTime=200
#hcFurnaceCustomFuel: Overrides vanilla burn times for specific items. [Side: SERVER | Default: true]
hcFurnaceCustomFuel=true
#hcFurnaceTooltip: Adds furnace data to items with modified cook time. [Side: CLIENT | Default: true]
hcFurnaceTooltip=true
#HCOres: Ores only smelt into a single Nugget, making it much harder to create large amounts of metal.
#Additionally, this feature changes the recipes of Compasses, Clocks, Buckets, and Flint and Steels to better fit the nugget smelting.
HCOres=false
#hcOreDusts: Makes dusts smelt into nuggets. This will probably break even more mods than HCOres itself.
hcOreDusts=false
#enablePenalties: Adds hooks to support various Hardcore Features, like HCArmor. Somewhat performance intensive. [Side: BOTH | Default: false]
enablePenalties=false
#removeSpeedPenaltyFOVChanges: Counteracts FOV changes caused by Speed Penalties. [Side: CLIENT | Default: true]
removeSpeedPenaltyFOVChanges=true
#HCArmor: Gives armor weights that affect movement. Depends on "enablePenalties". [Side: BOTH | Default: true]
HCArmor=true
#HCMovement: Changes player walking speed depending on the block underfoot. Depends on "enablePenalties". [Side: BOTH | Default: true]
HCMovement=true
#hcMovementDefault: Default walking speed for unknown materials; Changing this won't modify the "actual" default walking speed. [Side: BOTH | Default: 0.75]
hcMovementDefault=0.75
#hcMovementFast: Default, faster walking speed for quality roads. [Side: BOTH | Default: 1.2]
hcMovementFast=1.2

